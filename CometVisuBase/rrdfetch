#!/bin/bash

RRD=`echo "$QUERY_STRING" | sed -n 's/^.*rrd=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`
DS=`echo "$QUERY_STRING" | sed -n 's/^.*ds=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`
START=`echo "$QUERY_STRING" | sed -n 's/^.*start=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`
END=`echo "$QUERY_STRING" | sed -n 's/^.*end=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`
RES=`echo "$QUERY_STRING" | sed -n 's/^.*res=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`

if [ ! -f /var/www/rrd/$RRD ]; then
  # send 400 instead of 404 to differentiate easily between a bad server
  # setup that doesn't find this script from the file not found
  echo "Status: 400 Bad Request"
  echo
  echo "RRD not found at '/var/www/rrd/$RRD'!"
  exit
fi

rrdtool fetch /var/www/rrd/$RRD $DS -s$START -e$END -r$RES 2>&1 | \
{ while read line ;
do
  if [[ "$line" == "ERROR: This RRD was created on another architecture" ]]
  then
    echo "Status: 409 Conflict"
    echo
    echo "ERROR: This RRD was created on another architecture"
    exit
  fi

  if [[ "$line" == *:* ]]            # matching lines with ":"
  then
    arr=(${line//: / })              # splits string with ": " in array
    timestamp="${arr[0]}000"         # first is the time stamp
    content=${arr[@]:1}              # all but the first
    content_text=${content// /\",\"} # join with "," in between
    data+="[$timestamp,[\"$content_text\"]],"
fi
done
echo Content-Type: application/json
echo Content-Encoding: gzip
echo
echo "[${data%?}]" | gzip -c         # cuts last char of $data and makes [] around
}
