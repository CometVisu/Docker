#!/bin/bash

# creates dockerfile for multiple plattforms as needed.
# pass --noDockerBuild as first argument to only generate dockerfiles without building them

# enter desired plattforms here (following the docker notation, e.g. arm32v7
targetArch=(amd64 arm32v7)

# enter here the mapping of docker plattform notation to qemu notation, e.g. for arm32v7 is arm the appropriate mapping
declare -A qemuArchMap=([amd64]=amd [arm32v7]=arm)

############################################################################
# Normally you should nothing change below this line

echo "Start generation of docker files for archs ${targetArch[@]}"

for baseArchDocker in ${targetArch[@]}
do

        cp Dockerfile.cross Dockerfile.$baseArchDocker
        sed -i "s|__BASEIMAGE_ARCH__|$baseArchDocker|g" Dockerfile.$baseArchDocker
        sed -i "s|__QEMU_ARCH__|${qemuArchMap[$baseArchDocker]}|g" Dockerfile.$baseArchDocker

        if [ ${baseArchDocker} == 'amd64' ]
        then
                sed -i "/__CROSS_/d" Dockerfile.$baseArchDocker
                sed -i "s|amd64/||g" Dockerfile.$baseArchDocker
        else
                sed -i "s/__CROSS_//g" Dockerfile.$baseArchDocker
        fi

done



if [ $1 == "--noDockerBuild" ]
then
	echo "--noDockerBuild was specified, skipping container generation"
	exit 0
fi


for baseArchDocker in ${targetArch[@]}
do
	printf "\n\n\n###########################################################\n"
	printf "Start docker build for $baseArchDocker\n\n\n"
	
	if [ $baseArchDocker == "arm32v7" ]
	then
		#docker run --rm --privileged multiarch/qemu-user-static:register
	fi
	
	# $IMAGE_TAG var is injected into the build so the tag is correct.

	docker build --build-arg VCS_REF=`git rev-parse --short HEAD` \
	  --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
	  -t cometvisu/cometvisuabstractbase:$baseArchDocker-$IMAGE_TAG -f Dockerfile.$baseArchDocker .
 
	if [ $1 == "--noPush" ]
	then
		echo "--noPush was specified, skipping pushing container"
		continue
	fi

	 docker push cometvisu/cometvisuabstractbase:$baseArchDocker-$IMAGE_TAG

done

